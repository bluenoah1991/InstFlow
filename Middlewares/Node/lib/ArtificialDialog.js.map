{"version":3,"sources":["../src/ArtificialDialog.js"],"names":["AcquireMessage","session","ext_type","msg_id","v1","msg_type","message","type","text","source","agent","serviceUrl","address","user_client_id","user","id","user_client_name","name","bot_client_id","bot","bot_client_name","channel_id","channelId","conversation_id","conversation","time","Date","getTime","saveNLMessage","module","exports","lib","dialog","args","undefined","trim","toUpperCase","send","endDialog","referer","replaceDialog"],"mappings":"AAAA;;AAEA;;AACA;;;;AAEA;;AACA;;;;;;AAEA,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA0C;AACtC,QAAIC,SAAS,mBAAKC,EAAL,EAAb;AACA,QAAIC,WAAWJ,QAAQK,OAAR,CAAgBC,IAA/B;AACA,QAAIC,OAAOP,QAAQK,OAAR,CAAgBE,IAA3B;AACA,QAAIC,SAASR,QAAQK,OAAR,CAAgBG,MAA7B;AACA,QAAIC,QAAQT,QAAQK,OAAR,CAAgBI,KAA5B;AACA,QAAIC,aAAaV,QAAQK,OAAR,CAAgBM,OAAhB,CAAwBD,UAAzC;AACA,QAAIE,iBAAiBZ,QAAQK,OAAR,CAAgBM,OAAhB,CAAwBE,IAAxB,CAA6BC,EAAlD;AACA,QAAIC,mBAAmBf,QAAQK,OAAR,CAAgBM,OAAhB,CAAwBE,IAAxB,CAA6BG,IAApD;AACA,QAAIC,gBAAgBjB,QAAQK,OAAR,CAAgBM,OAAhB,CAAwBO,GAAxB,CAA4BJ,EAAhD;AACA,QAAIK,kBAAkBnB,QAAQK,OAAR,CAAgBM,OAAhB,CAAwBO,GAAxB,CAA4BF,IAAlD;AACA,QAAII,aAAapB,QAAQK,OAAR,CAAgBM,OAAhB,CAAwBU,SAAzC;AACA,QAAIC,kBAAkBtB,QAAQK,OAAR,CAAgBM,OAAhB,CAAwBY,YAAxB,CAAqCT,EAA3D;AACA,QAAIU,OAAO,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA,uBAASC,aAAT,CACI1B,QADJ,EACcC,MADd,EACsBE,QADtB,EACgCG,IADhC,EACsCC,MADtC,EAC8CC,KAD9C,EACqDC,UADrD,EAEIE,cAFJ,EAEoBG,gBAFpB,EAEsCE,aAFtC,EAEqDE,eAFrD,EAGIC,UAHJ,EAGgBE,eAHhB,EAGiC,CAHjC,EAGoCE,IAHpC;AAKH;;AAEDI,OAAOC,OAAP,GAAiB,YAAU;AACvB,QAAIC,MAAM,wBAAY,YAAZ,CAAV;;AAEAA,QAAIC,MAAJ,CAAW,GAAX,EAAgB,UAAS/B,OAAT,EAAkBgC,IAAlB,EAAuB;AACnC,YAAGhC,QAAQK,OAAR,CAAgBE,IAAhB,IAAwB0B,SAAxB,IAAqCjC,QAAQK,OAAR,CAAgBE,IAAhB,CAAqB2B,IAArB,GAA4BC,WAA5B,MAA6C,GAArF,EAAyF;AACrFnC,oBAAQoC,IAAR,CAAa,8BAAb;AACArC,2BAAeC,OAAf,EAAwB,OAAxB;AACAA,oBAAQqC,SAAR;AACH,SAJD,MAIO,IAAGL,QAAQC,SAAR,IAAqBD,KAAKM,OAAL,IAAgB,QAAxC,EAAkD;AACrD;AACAvC,2BAAeC,OAAf,EAAwB,OAAxB;AACH,SAHM,MAGA;AACH;AACAD,2BAAeC,OAAf,EAAwB,SAAxB;AACH;AACJ,KAZD;;AAcA8B,QAAIC,MAAJ,CAAW,QAAX,EAAqB,UAAS/B,OAAT,EAAkBgC,IAAlB,EAAuB;AACxChC,gBAAQoC,IAAR,CAAa,6CAAb;AACApC,gBAAQuC,aAAR,CAAsB,GAAtB,EAA2B;AACvBD,qBAAS;AADc,SAA3B;AAGH,KALD;;AAOA,WAAOR,GAAP;AACH,CAzBD","file":"ArtificialDialog.js","sourcesContent":["\"use strict\";\r\n\r\nimport \"babel-polyfill\";\r\nimport uuid from 'node-uuid';\r\n\r\nimport {Library, SimpleDialog} from 'botbuilder';\r\nimport schedule from './Schedule';\r\n\r\nfunction AcquireMessage(session, ext_type){\r\n    let msg_id = uuid.v1();\r\n    let msg_type = session.message.type;\r\n    let text = session.message.text;\r\n    let source = session.message.source;\r\n    let agent = session.message.agent;\r\n    let serviceUrl = session.message.address.serviceUrl;\r\n    let user_client_id = session.message.address.user.id;\r\n    let user_client_name = session.message.address.user.name;\r\n    let bot_client_id = session.message.address.bot.id;\r\n    let bot_client_name = session.message.address.bot.name;\r\n    let channel_id = session.message.address.channelId;\r\n    let conversation_id = session.message.address.conversation.id;\r\n    let time = new Date().getTime();\r\n    schedule.saveNLMessage(\r\n        ext_type, msg_id, msg_type, text, source, agent, serviceUrl, \r\n        user_client_id, user_client_name, bot_client_id, bot_client_name, \r\n        channel_id, conversation_id, 1, time\r\n    );\r\n}\r\n\r\nmodule.exports = function(){\r\n    var lib = new Library('artificial');\r\n\r\n    lib.dialog('/', function(session, args){\r\n        if(session.message.text != undefined && session.message.text.trim().toUpperCase() == 'Q'){\r\n            session.send('Exit the Artificial Service.');\r\n            AcquireMessage(session, 'close');\r\n            session.endDialog();\r\n        } else if(args != undefined && args.referer == '/start') {\r\n            // notifying the instflow server that started a new dialog\r\n            AcquireMessage(session, 'start');\r\n        } else {\r\n            // talk\r\n            AcquireMessage(session, 'message');\r\n        }\r\n    });\r\n\r\n    lib.dialog('/start', function(session, args){\r\n        session.send('InstFlow Artificial Service (Enter Q exit):');\r\n        session.replaceDialog('/', {\r\n            referer: '/start'\r\n        });\r\n    });\r\n\r\n    return lib;\r\n};"]}