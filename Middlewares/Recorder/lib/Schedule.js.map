{"version":3,"sources":["../src/Schedule.js"],"names":["Schedule","interval","process","env","RECORDER_SYNC_INTERVAL","rule","syncJob","scheduleJob","sync","findAll","where","__sync__","then","instances","forEach","instance","index","post","channel_id","user_id","name","extra","flush","err","data","resp","console","log","update","findOrCreate","defaults","spread","user","created","get","plain"],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;AACA;;;;;;;;IAEMA,Q;AACF,wBAAa;AAAA;;AACT,YAAIC,WAAWC,QAAQC,GAAR,CAAYC,sBAAZ,IAAsC,CAArD;AACA,aAAKC,IAAL,UAAiBJ,QAAjB;AACA,aAAKK,OAAL,GAAe,uBAAUC,WAAV,CAAsB,KAAKF,IAA3B,EAAiC,KAAKG,IAAtC,CAAf;AACH;;;;+BAEK;AACF,8BAAUC,OAAV,CAAkB,EAACC,OAAO,EAACC,UAAU,KAAX,EAAR,EAAlB,EAA8CC,IAA9C,CAAmD,UAASC,SAAT,EAAmB;AAClEA,0BAAUC,OAAV,CAAkB,UAASC,QAAT,EAAmBC,KAAnB,EAAyB;AACvC,wCAAUC,IAAV,CAAe,eAAf,EAAgC;AAC5BC,oCAAYH,SAASG,UADO;AAE5BC,iCAASJ,SAASG,UAFU;AAG5BE,8BAAML,SAASK,IAHa;AAI5BC,+BAAON,SAASM;AAJY,qBAAhC;AAMH,iBAPD;AAQA,oCAAUC,KAAV,CAAgB,UAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAAyB;AACrC,wBAAGF,GAAH,EAAO;AACHG,gCAAQC,GAAR,CAAYJ,GAAZ;AACH,qBAFD,MAEO;AACH,4BAAIL,aAAaM,KAAKN,UAAtB;AACA,4BAAIC,UAAUK,KAAKL,OAAnB;AACA,0CAAUS,MAAV,CAAiB,EAACjB,UAAU,IAAX,EAAjB,EAAmC;AAC/BD,mCAAO;AACHQ,4CAAYA,UADT;AAEHC,yCAASA;AAFN;AADwB,yBAAnC;AAMH;AACJ,iBAbD;AAcH,aAvBD;AAwBH;;;iCAEQD,U,EAAYC,O,EAASC,I,EAAMC,K,EAAM;AACtC,mBAAO,kBAAUQ,YAAV,CAAuB;AAC1BnB,uBAAO;AACHQ,gCAAYA,UADT;AAEHC,6BAASA;AAFN,iBADmB;AAK1BW,0BAAU;AACNV,0BAAMA,IADA;AAENC,2BAAOA;AAFD;AALgB,aAAvB,EASJU,MATI,CASG,UAASC,IAAT,EAAeC,OAAf,EAAuB;AAC7BP,wBAAQC,GAAR,CAAYK,KAAKE,GAAL,CAAS,EAACC,OAAO,IAAR,EAAT,CAAZ;AACA,uBAAOF,OAAP;AACH,aAZM,CAAP;AAaH;;;;;;kBAGU,IAAIjC,QAAJ,E","file":"Schedule.js","sourcesContent":["\"use strict\";\r\n\r\nimport Schedule_ from 'node-schedule';\r\nimport {UserModel} from './models';\r\nimport httpProxy from './HttpProxy';\r\n\r\nclass Schedule {\r\n    constructor(){\r\n        let interval = process.env.RECORDER_SYNC_INTERVAL || 5;\r\n        this.rule = `*/${interval} * * * *`;\r\n        this.syncJob = Schedule_.scheduleJob(this.rule, this.sync);\r\n    }\r\n\r\n    sync(){\r\n        UserModel.findAll({where: {__sync__: false}}).then(function(instances){\r\n            instances.forEach(function(instance, index){\r\n                httpProxy.post('/api/v1/users', {\r\n                    channel_id: instance.channel_id,\r\n                    user_id: instance.channel_id,\r\n                    name: instance.name,\r\n                    extra: instance.extra\r\n                });\r\n            });\r\n            httpProxy.flush(function(err, data, resp){\r\n                if(err){\r\n                    console.log(err);\r\n                } else {\r\n                    let channel_id = data.channel_id;\r\n                    let user_id = data.user_id;\r\n                    UserModel.update({__sync__: true}, { \r\n                        where: { \r\n                            channel_id: channel_id,\r\n                            user_id: user_id\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    saveUser(channel_id, user_id, name, extra){\r\n        return UserModel.findOrCreate({\r\n            where: {\r\n                channel_id: channel_id,\r\n                user_id: user_id\r\n            }, \r\n            defaults: {\r\n                name: name,\r\n                extra: extra\r\n            }\r\n        }).spread(function(user, created){\r\n            console.log(user.get({plain: true}));\r\n            return created;\r\n        });\r\n    }\r\n}\r\n\r\nexport default new Schedule();"]}