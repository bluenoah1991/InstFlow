{"version":3,"sources":["../src/Schedule.js"],"names":["Schedule","interval","process","env","RECORDER_SYNC_INTERVAL","rule","syncJob","scheduleJob","sync","findAll","where","__sync__","__tries__","$lt","then","instances","each","instance","callback","increment","post","channel_id","user_id","name","extra","bind","err","console","log","hasCache","flush","data","resp","update","findOrCreate","defaults","spread","created","get","plain","text","type","source","agent","user_name","conversation_id","bot_id","bot_name","orientation","create","instance_"],"mappings":"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","file":"Schedule.js","sourcesContent":["\"use strict\";\r\n\r\nimport async from 'async';\r\nimport Schedule_ from 'node-schedule';\r\nimport {UserModel, MessageModel} from './models';\r\nimport httpProxy from './HttpProxy';\r\n\r\nclass Schedule {\r\n    constructor(){\r\n        let interval = process.env.RECORDER_SYNC_INTERVAL || 5;\r\n        this.rule = `*/${interval} * * * *`;\r\n        this.syncJob = Schedule_.scheduleJob(this.rule, this.sync);\r\n    }\r\n\r\n    sync(){\r\n        UserModel.findAll({where: {__sync__: false, __tries__: {$lt: 3}}}).then(function(instances){\r\n            async.each(instances, function(instance, callback){\r\n                instance.increment('__tries__').then(function(){\r\n                    httpProxy.post('/api/v1/users', {\r\n                        channel_id: instance.channel_id,\r\n                        user_id: instance.user_id,\r\n                        name: instance.name,\r\n                        extra: instance.extra\r\n                    });\r\n                    callback();\r\n                }.bind(this));\r\n            }, function(err){\r\n                if(err){\r\n                    console.log(err);\r\n                } else if(httpProxy.hasCache()){\r\n                    httpProxy.flush(function(err, data, resp){\r\n                        if(err){\r\n                            console.log(err);\r\n                        } else {\r\n                            let channel_id = data.channel_id;\r\n                            let user_id = data.user_id;\r\n                            UserModel.update({__sync__: true}, { \r\n                                where: { \r\n                                    channel_id: channel_id,\r\n                                    user_id: user_id\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    saveUser(channel_id, user_id, name, extra){\r\n        return UserModel.findOrCreate({\r\n            where: {\r\n                channel_id: channel_id,\r\n                user_id: user_id\r\n            }, \r\n            defaults: {\r\n                name: name,\r\n                extra: extra\r\n            }\r\n        }).spread(function(instance, created){\r\n            console.log(instance.get({plain: true}));\r\n            return created;\r\n        });\r\n    }\r\n\r\n    saveMessage(\r\n        text, type, source, agent, user_id,\r\n        user_name, channel_id, conversation_id,\r\n        bot_id, bot_name, orientation){\r\n        return MessageModel.create({\r\n            text: text,\r\n            type: type,\r\n            source: source,\r\n            agent: agent,\r\n            user_id: user_id,\r\n            user_name: user_name,\r\n            channel_id: channel_id,\r\n            conversation_id: conversation_id,\r\n            bot_id: bot_id,\r\n            bot_name: bot_name,\r\n            orientation: orientation\r\n        }).then(function(instance){\r\n            let instance_ = instance.get({plain: true});\r\n            console.log(instance_.text);\r\n            return instance_;\r\n        });\r\n    }\r\n}\r\n\r\nexport default new Schedule();"]}