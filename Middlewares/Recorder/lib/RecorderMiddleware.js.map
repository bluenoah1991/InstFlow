{"version":3,"sources":["../src/RecorderMiddleware.js"],"names":["ORIENTATION_INCOMING","ORIENTATION_OUTGOING","RecordUser","event","channel_id","address","channelId","user_id","user","id","name","extra","undefined","JSON","stringify","saveUser","RecordMessage","orientation","msg_id","v1","text","msg_type","type","source","agent","user_name","conversation_id","conversation","bot_client_id","bot","bot_client_name","time","Date","getTime","saveMessage","RecorderMiddleware","next"],"mappings":"AAAA;;;;;;;;AAEA;;AACA;;;;AAEA;;;;;;;;AAEA,IAAMA,uBAAuB,CAA7B;AACA,IAAMC,uBAAuB,CAA7B;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AACtB,QAAIC,aAAaD,MAAME,OAAN,CAAcC,SAA/B;AACA,QAAIC,UAAUJ,MAAME,OAAN,CAAcG,IAAd,CAAmBC,EAAjC;AACA,QAAIC,OAAOP,MAAME,OAAN,CAAcG,IAAd,CAAmBE,IAA9B;AACA,QAAIC,QAAQ,IAAZ;AACA,QAAGR,MAAME,OAAN,IAAiBO,SAApB,EAA8B;AAC1BD,gBAAQE,KAAKC,SAAL,CAAeX,MAAME,OAArB,CAAR;AACH;AACD,uBAASU,QAAT,CAAkBX,UAAlB,EAA8BG,OAA9B,EAAuCG,IAAvC,EAA6CC,KAA7C;AACH;;AAED,SAASK,aAAT,CAAuBb,KAAvB,EAA8Bc,WAA9B,EAA0C;AACtC,QAAIC,SAAS,mBAAKC,EAAL,EAAb;AACA,QAAIC,OAAOjB,MAAMiB,IAAjB;AACA,QAAIC,WAAWlB,MAAMmB,IAArB;AACA,QAAIC,SAASpB,MAAMoB,MAAnB;AACA,QAAIC,QAAQrB,MAAMqB,KAAlB;AACA,QAAIjB,UAAUJ,MAAME,OAAN,CAAcG,IAAd,CAAmBC,EAAjC;AACA,QAAIgB,YAAYtB,MAAME,OAAN,CAAcG,IAAd,CAAmBE,IAAnC;AACA,QAAIN,aAAaD,MAAME,OAAN,CAAcC,SAA/B;AACA,QAAIoB,kBAAkBvB,MAAME,OAAN,CAAcsB,YAAd,CAA2BlB,EAAjD;AACA,QAAImB,gBAAgBzB,MAAME,OAAN,CAAcwB,GAAd,CAAkBpB,EAAtC;AACA,QAAIqB,kBAAkB3B,MAAME,OAAN,CAAcwB,GAAd,CAAkBnB,IAAxC;AACA,QAAIqB,OAAO,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA,uBAASC,WAAT,CACIhB,SAAOA,MADX,EAEIE,OAAKA,IAFT,EAGIC,WAASA,QAHb,EAIIE,SAAOA,MAJX,EAKIC,QAAMA,KALV,EAMIjB,UAAQA,OANZ,EAOIkB,YAAUA,SAPd,EAQIrB,aAAWA,UARf,EASIsB,kBAAgBA,eATpB,EAUIE,gBAAcA,aAVlB,EAWIE,kBAAgBA,eAXpB,EAYIb,cAAYA,WAZhB,EAaIc,OAAKA,IAbT;AAeH;;IAEoBI,kB;;;;;;;gCACThC,K,EAAOiC,I,EAAK;AAChBlC,uBAAWC,KAAX;AACAa,0BAAcb,KAAd,EAAqBH,oBAArB;AACAoC;AACH;;;6BAEIjC,K,EAAOiC,I,EAAK;AACbpB,0BAAcb,KAAd,EAAqBF,oBAArB;AACAmC;AACH;;;;;;kBAVgBD,kB","file":"RecorderMiddleware.js","sourcesContent":["\"use strict\";\r\n\r\nimport \"babel-polyfill\";\r\nimport uuid from 'node-uuid';\r\n\r\nimport schedule from './Schedule';\r\n\r\nconst ORIENTATION_INCOMING = 1;\r\nconst ORIENTATION_OUTGOING = 2;\r\n\r\n\r\nfunction RecordUser(event){\r\n    let channel_id = event.address.channelId;\r\n    let user_id = event.address.user.id;\r\n    let name = event.address.user.name;\r\n    let extra = null;\r\n    if(event.address != undefined){\r\n        extra = JSON.stringify(event.address);\r\n    }\r\n    schedule.saveUser(channel_id, user_id, name, extra);\r\n}\r\n\r\nfunction RecordMessage(event, orientation){\r\n    let msg_id = uuid.v1();\r\n    let text = event.text;\r\n    let msg_type = event.type;\r\n    let source = event.source;\r\n    let agent = event.agent;\r\n    let user_id = event.address.user.id;\r\n    let user_name = event.address.user.name;\r\n    let channel_id = event.address.channelId;\r\n    let conversation_id = event.address.conversation.id;\r\n    let bot_client_id = event.address.bot.id;\r\n    let bot_client_name = event.address.bot.name;\r\n    let time = new Date().getTime();\r\n    schedule.saveMessage(\r\n        msg_id=msg_id,\r\n        text=text,\r\n        msg_type=msg_type,\r\n        source=source,\r\n        agent=agent,\r\n        user_id=user_id,\r\n        user_name=user_name,\r\n        channel_id=channel_id,\r\n        conversation_id=conversation_id,\r\n        bot_client_id=bot_client_id,\r\n        bot_client_name=bot_client_name,\r\n        orientation=orientation,\r\n        time=time\r\n    );\r\n}\r\n\r\nexport default class RecorderMiddleware {\r\n    receive(event, next){\r\n        RecordUser(event);\r\n        RecordMessage(event, ORIENTATION_INCOMING);\r\n        next();\r\n    }\r\n\r\n    send(event, next){\r\n        RecordMessage(event, ORIENTATION_OUTGOING);\r\n        next();\r\n    }\r\n\r\n}"]}