{"version":3,"sources":["../src/RecorderMiddleware.js"],"names":["ORIENTATION_INCOMING","ORIENTATION_OUTGOING","RecordUser","event","channel_id","address","channelId","user_id","user","id","name","extra","undefined","JSON","stringify","saveUser","RecordMessage","orientation","text","type","source","agent","user_name","conversation_id","conversation","bot_id","bot","bot_name","saveMessage","RecorderMiddleware","next"],"mappings":"AAAA;;;;;;;;AAEA;;AAEA;;;;;;;;AAEA,IAAMA,uBAAuB,CAA7B;AACA,IAAMC,uBAAuB,CAA7B;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AACtB,QAAIC,aAAaD,MAAME,OAAN,CAAcC,SAA/B;AACA,QAAIC,UAAUJ,MAAME,OAAN,CAAcG,IAAd,CAAmBC,EAAjC;AACA,QAAIC,OAAOP,MAAME,OAAN,CAAcG,IAAd,CAAmBE,IAA9B;AACA,QAAIC,QAAQ,IAAZ;AACA,QAAGR,MAAME,OAAN,IAAiBO,SAApB,EAA8B;AAC1BD,gBAAQE,KAAKC,SAAL,CAAeX,MAAME,OAArB,CAAR;AACH;AACD,uBAASU,QAAT,CAAkBX,UAAlB,EAA8BG,OAA9B,EAAuCG,IAAvC,EAA6CC,KAA7C;AACH;;AAED,SAASK,aAAT,CAAuBb,KAAvB,EAA8Bc,WAA9B,EAA0C;AACtC,QAAIC,OAAOf,MAAMe,IAAjB;AACA,QAAIC,OAAOhB,MAAMgB,IAAjB;AACA,QAAIC,SAASjB,MAAMiB,MAAnB;AACA,QAAIC,QAAQlB,MAAMkB,KAAlB;AACA,QAAId,UAAUJ,MAAME,OAAN,CAAcG,IAAd,CAAmBC,EAAjC;AACA,QAAIa,YAAYnB,MAAME,OAAN,CAAcG,IAAd,CAAmBE,IAAnC;AACA,QAAIN,aAAaD,MAAME,OAAN,CAAcC,SAA/B;AACA,QAAIiB,kBAAkBpB,MAAME,OAAN,CAAcmB,YAAd,CAA2Bf,EAAjD;AACA,QAAIgB,SAAStB,MAAME,OAAN,CAAcqB,GAAd,CAAkBjB,EAA/B;AACA,QAAIkB,WAAWxB,MAAME,OAAN,CAAcqB,GAAd,CAAkBhB,IAAjC;AACA,uBAASkB,WAAT,CACIV,OAAKA,IADT,EAEIC,OAAKA,IAFT,EAGIC,SAAOA,MAHX,EAIIC,QAAMA,KAJV,EAKId,UAAQA,OALZ,EAMIe,YAAUA,SANd,EAOIlB,aAAWA,UAPf,EAQImB,kBAAgBA,eARpB,EASIE,SAAOA,MATX,EAUIE,WAASA,QAVb,EAWIV,cAAYA,WAXhB;AAaH;;IAEoBY,kB;;;;;;;gCACT1B,K,EAAO2B,I,EAAK;AAChB5B,uBAAWC,KAAX;AACAa,0BAAcb,KAAd,EAAqBH,oBAArB;AACA8B;AACH;;;6BAEI3B,K,EAAO2B,I,EAAK;AACbd,0BAAcb,KAAd,EAAqBF,oBAArB;AACA6B;AACH;;;;;;kBAVgBD,kB","file":"RecorderMiddleware.js","sourcesContent":["\"use strict\";\r\n\r\nimport \"babel-polyfill\";\r\n\r\nimport schedule from './Schedule';\r\n\r\nconst ORIENTATION_INCOMING = 1;\r\nconst ORIENTATION_OUTGOING = 2;\r\n\r\n\r\nfunction RecordUser(event){\r\n    let channel_id = event.address.channelId;\r\n    let user_id = event.address.user.id;\r\n    let name = event.address.user.name;\r\n    let extra = null;\r\n    if(event.address != undefined){\r\n        extra = JSON.stringify(event.address);\r\n    }\r\n    schedule.saveUser(channel_id, user_id, name, extra);\r\n}\r\n\r\nfunction RecordMessage(event, orientation){\r\n    let text = event.text;\r\n    let type = event.type;\r\n    let source = event.source;\r\n    let agent = event.agent;\r\n    let user_id = event.address.user.id;\r\n    let user_name = event.address.user.name;\r\n    let channel_id = event.address.channelId;\r\n    let conversation_id = event.address.conversation.id;\r\n    let bot_id = event.address.bot.id;\r\n    let bot_name = event.address.bot.name;\r\n    schedule.saveMessage(\r\n        text=text,\r\n        type=type,\r\n        source=source,\r\n        agent=agent,\r\n        user_id=user_id,\r\n        user_name=user_name,\r\n        channel_id=channel_id,\r\n        conversation_id=conversation_id,\r\n        bot_id=bot_id,\r\n        bot_name=bot_name,\r\n        orientation=orientation\r\n    );\r\n}\r\n\r\nexport default class RecorderMiddleware {\r\n    receive(event, next){\r\n        RecordUser(event);\r\n        RecordMessage(event, ORIENTATION_INCOMING);\r\n        next();\r\n    }\r\n\r\n    send(event, next){\r\n        RecordMessage(event, ORIENTATION_OUTGOING);\r\n        next();\r\n    }\r\n\r\n}"]}