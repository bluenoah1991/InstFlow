{"version":3,"sources":["../src/SequelizeHelper.js"],"names":["_BaseModel","tt","__sync__","type","BOOLEAN","defaultValue","Object","assign","SequelizeHelper","sequelize","dialect","pool","max","min","idle","storage","process","env","RECORDER_STORAGE_PATH","interval","RECORDER_SYNC_INTERVAL","rule","syncJob","scheduleJob","sync","findAll","where","then","instances","forEach","instance","index","post","channel_id","user_id","name","extra","flush","force","findOrCreate","defaults","spread","user","created","console","log","get","plain","sequelizeHelper"],"mappings":"AAAA;;;;;;;;;QAOgBA,U,GAAAA,U;;AALhB;;;;AACA;;;;AACA;;AACA;;;;;;;;AAEO,SAASA,UAAT,GAAqB;AACxB,QAAIC,KAAK;AACLC,kBAAU;AACNC,kBAAM,oBAAUC,OADV;AAENC,0BAAc;AAFR;AADL,KAAT;AAMA,WAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBN,EAAlB,CAAP;AACH;;IAEKO,e;AACF,+BAAa;AAAA;;AACT,aAAKC,SAAL,GAAiB,wBAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC;AAC7CC,qBAAS,QADoC;AAE7CC,kBAAM;AACFC,qBAAK,CADH;AAEFC,qBAAK,CAFH;AAGFC,sBAAM;AAHJ,aAFuC;AAO7CC,qBAASC,QAAQC,GAAR,CAAYC,qBAAZ,IAAqC;AAPD,SAAhC,CAAjB;AASA,YAAIC,WAAWH,QAAQC,GAAR,CAAYG,sBAAZ,IAAsC,CAArD;AACA,aAAKC,IAAL,UAAiBF,QAAjB;AACA,aAAKG,OAAL,GAAe,uBAASC,WAAT,CAAqB,KAAKF,IAA1B,EAAgC,KAAKG,IAArC,CAAf;AACH;;;;+BAEK;AACF,8BAAUC,OAAV,CAAkB,EAACC,OAAO,EAACxB,UAAU,KAAX,EAAR,EAAlB,EAA8CyB,IAA9C,CAAmD,UAASC,SAAT,EAAmB;AAClEA,0BAAUC,OAAV,CAAkB,UAASC,QAAT,EAAmBC,KAAnB,EAAyB;AACvC,wCAAUC,IAAV,CAAe,eAAf,EAAgC;AAC5BC,oCAAYH,SAASG,UADO;AAE5BC,iCAASJ,SAASG,UAFU;AAG5BE,8BAAML,SAASK,IAHa;AAI5BC,+BAAOA;AAJqB,qBAAhC;AAMH,iBAPD;AAQA,oCAAUC,KAAV;AACH,aAVD;AAWH;;;iCAEQJ,U,EAAYC,O,EAASC,I,EAAMC,K,EAAM;AACtC,mBAAO,kBAAUZ,IAAV,CAAe,EAACc,OAAO,IAAR,EAAf,EAA8BX,IAA9B,CAAmC,YAAU;AAChD,uBAAO,kBAAUY,YAAV,CAAuB;AAC1Bb,2BAAO;AACHO,oCAAYA,UADT;AAEHC,iCAASA;AAFN,qBADmB;AAK1BM,8BAAU;AACNL,8BAAMA,IADA;AAENC,+BAAOA;AAFD;AALgB,iBAAvB,CAAP;AAUH,aAXM,EAWJK,MAXI,CAWG,UAASC,IAAT,EAAeC,OAAf,EAAuB;AAC7BC,wBAAQC,GAAR,CAAYH,KAAKI,GAAL,CAAS,EAACC,OAAO,IAAR,EAAT,CAAZ;AACA,uBAAOJ,OAAP;AACH,aAdM,CAAP;AAeH;;;;;;AAGE,IAAIK,4CAAkB,IAAIxC,eAAJ,EAAtB","file":"SequelizeHelper.js","sourcesContent":["\"use strict\";\r\n\r\nimport Sequelize from 'sequelize';\r\nimport Schedule from 'node-schedule';\r\nimport {UserModel} from './models';\r\nimport httpProxy from './HttpProxy';\r\n\r\nexport function _BaseModel(){\r\n    var tt = {\r\n        __sync__: {\r\n            type: Sequelize.BOOLEAN,\r\n            defaultValue: false\r\n        }\r\n    };\r\n    return Object.assign({}, tt);\r\n};\r\n\r\nclass SequelizeHelper {\r\n    constructor(){\r\n        this.sequelize = new Sequelize(null, null, null, {\r\n            dialect: 'sqlite',\r\n            pool: {\r\n                max: 5,\r\n                min: 0,\r\n                idle: 10000\r\n            },\r\n            storage: process.env.RECORDER_STORAGE_PATH || './recorded_data.sqlite3'\r\n        });\r\n        let interval = process.env.RECORDER_SYNC_INTERVAL || 5;\r\n        this.rule = `*/${interval} * * * *`;\r\n        this.syncJob = Schedule.scheduleJob(this.rule, this.sync);\r\n    }\r\n\r\n    sync(){\r\n        UserModel.findAll({where: {__sync__: false}}).then(function(instances){\r\n            instances.forEach(function(instance, index){\r\n                httpProxy.post('/api/v1/users', {\r\n                    channel_id: instance.channel_id,\r\n                    user_id: instance.channel_id,\r\n                    name: instance.name,\r\n                    extra: extra\r\n                });\r\n            });\r\n            httpProxy.flush();\r\n        });\r\n    }\r\n\r\n    saveUser(channel_id, user_id, name, extra){\r\n        return UserModel.sync({force: true}).then(function(){\r\n            return UserModel.findOrCreate({\r\n                where: {\r\n                    channel_id: channel_id,\r\n                    user_id: user_id\r\n                }, \r\n                defaults: {\r\n                    name: name,\r\n                    extra: extra\r\n                }\r\n            });\r\n        }).spread(function(user, created){\r\n            console.log(user.get({plain: true}));\r\n            return created;\r\n        });\r\n    }\r\n}\r\n\r\nexport var sequelizeHelper = new SequelizeHelper();\r\n"]}